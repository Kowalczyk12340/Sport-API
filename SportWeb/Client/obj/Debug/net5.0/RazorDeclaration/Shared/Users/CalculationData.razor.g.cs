// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SportWeb.Client.Shared.Users
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\_Imports.razor"
using SportWeb.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\_Imports.razor"
using SportWeb.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\_Imports.razor"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\Shared\Users\CalculationData.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\Shared\Users\CalculationData.razor"
using SPA.Production.BlazorViews.Shared.Models.OperationCalculator;

#line default
#line hidden
#nullable disable
    public partial class CalculationData : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 53 "C:\Users\Dell\Desktop\c#\SportAPI\SportWeb\Client\Shared\Users\CalculationData.razor"
       
  [Parameter]
  public ICollection<ShopOrderOperationDTO> ShopOrderOperations { get; set; } = new List<ShopOrderOperationDTO>();
  [Parameter]
  public int Quantity { get; set; } = 0;
  private string searchString = null;
  private int totalItems;
  private IEnumerable<ShopOrderOperationDTO> pagedData;
  private MudTable<ShopOrderOperationDTO> table;
  private bool Filter(ShopOrderOperationDTO element) => FilterData(element, searchString);
  private string _overflowInTimeSpanMessage => "eternity";

  private bool FilterData(ShopOrderOperationDTO element, string searchString)
  {
    if (string.IsNullOrWhiteSpace(searchString))
      return true;
    if (element.OperationNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase))
      return true;
    if (element.OperationDescription.Contains(searchString, StringComparison.OrdinalIgnoreCase))
      return true;
    if (element.WorkCenterNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase))
      return true;
    if (element.WorkCenterDescription.Contains(searchString, StringComparison.OrdinalIgnoreCase))
      return true;
    if ($"{element.OperationNumber} {element.OperationDescription} {element.WorkCenterNumber} {element.WorkCenterDescription}".Contains(searchString))
      return true;
    return false;
  }

  /// <summary>
  /// Here we simulate getting the paged, filtered and ordered data from the server
  /// </summary>
  private async Task<TableData<ShopOrderOperationDTO>> ServerReload(TableState state)
  {
    IEnumerable<ShopOrderOperationDTO> data = await httpClient.GetFromJsonAsync<List<ShopOrderOperationDTO>>("webapi/periodictable");
    await Task.Delay(300);
    data = data.Where(element =>
    {
      if (string.IsNullOrWhiteSpace(searchString))
        return true;
      if (element.OperationNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        return true;
      if (element.OperationDescription.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        return true;
      if (element.WorkCenterNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        return true;
      if (element.WorkCenterDescription.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        return true;
      if ($"{element.OperationNumber} {element.OperationDescription} {element.WorkCenterNumber} {element.WorkCenterDescription}".Contains(searchString))
        return true;
      return false;
    }).ToArray();
    totalItems = data.Count();

    pagedData = data.Skip(state.Page * state.PageSize).Take(state.PageSize).ToArray();
    return new TableData<ShopOrderOperationDTO>() { TotalItems = totalItems, Items = pagedData };
  }

  private void OnSearch(string text)
  {
    searchString = text;
    table.ReloadServerData();
  }

  public double CalculateSumHours(ShopOrderOperationDTO shopOrderOperationDTO)
  {
    return shopOrderOperationDTO.MachRunFactor * Quantity;
  }

  public string CalculateTotalTime(ShopOrderOperationDTO shopOrderOperationDTO)
  {

    try
    {
      var splitCount = Quantity / shopOrderOperationDTO.WorkCenterQuantityCount;
      var Total = shopOrderOperationDTO.MachSetupTime * splitCount + (shopOrderOperationDTO.MachRunFactor * Quantity);
      var TotalTime = TimeSpan.FromHours(shopOrderOperationDTO.MachRunFactor * Quantity).ToString("hh\\:mm\\:ss");
      return TotalTime;
    }
    catch (OverflowException ex)
    {
      return _overflowInTimeSpanMessage;
    }
  }

  public double CalculateSumHoursAfterSplit(ShopOrderOperationDTO shopOrderOperationDTO)
  {
    var splitCount = Quantity / shopOrderOperationDTO.WorkCenterQuantityCount;
    var SumHours = shopOrderOperationDTO.MachRunFactor * splitCount;
    return SumHours;
  }

  public string CalculateTotalTimeAfterSplit(ShopOrderOperationDTO shopOrderOperationDTO)
  {
    try
    {
      var splitCount = Quantity / shopOrderOperationDTO.WorkCenterQuantityCount;
      var Total = (shopOrderOperationDTO.MachSetupTime + ((shopOrderOperationDTO.MachRunFactor * Quantity) / splitCount));
      var TotalTimeAfterSplit = TimeSpan.FromHours(shopOrderOperationDTO.MachRunFactor * splitCount).ToString("hh\\:mm\\:ss");
      return TotalTimeAfterSplit;
    }
    catch (OverflowException ex)
    {
      return _overflowInTimeSpanMessage;
    }
  }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IStringLocalizer<Resources.Language> _l { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient httpClient { get; set; }
    }
}
#pragma warning restore 1591
